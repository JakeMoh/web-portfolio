{"version":3,"sources":["components/Experience.tsx","components/Title.tsx","components/Project.tsx","components/Education.tsx","games/Game.tsx","games/AlignFive/ConnectFive.tsx","components/Footer.tsx","App.tsx","index.tsx"],"names":["useStyles","makeStyles","experience","marginTop","width","card","paddingTop","paddingBottom","background","center","display","alignItems","justifyContent","padding","title","AWSDialog","props","onClose","open","Dialog","DialogTitle","DialogContent","DialogContentText","List","ListItem","ListItemText","SAPDialog","VCLDialog","Experience","classes","useState","openAWS","setOpenAWS","openSAP","setOpenSAP","openVCL","setOpenVCL","Container","className","Typography","variant","Grid","container","item","sm","xs","Avatar","alt","src","process","sx","height","maxWidth","Box","Button","onClick","Title","IconButton","window","fontSize","project","button","ConnectFiveDialog","Project","openConnectFive","setOpenConnectFive","spacing","Card","CardMedia","component","image","CardContent","gutterBottom","CardActions","href","Link","underline","education","marginBottom","UBCDialog","Education","openUBC","setOpenUBC","Game","BOARD_SIZE","getSquareIndex","row","col","getSquareValue","squares","Square","style","minWidth","minHeight","value","Board","renderSquare","board","push","ConnectFive","status","Array","fill","setSquares","isXTurn","setIsXTurn","winner","squareValue","calculateWinner","squares_","slice","console","log","handleClick","align","footer","color","Footer","md","darkTheme","createTheme","palette","mode","primary","main","default","paper","components","MuiCard","styleOverrides","root","backgroundImage","MuiPaper","App","CssBaseline","ThemeProvider","theme","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8b563f8c.chunk.js","sourcesContent":["import { makeStyles } from '@mui/styles';\nimport { useState } from 'react';\nimport { Typography, Avatar, Container, Grid, Link, Box, Dialog, DialogTitle, DialogContent, DialogContentText, Button, List, ListItem, ListItemText} from '@mui/material';\n\nconst useStyles = makeStyles({\n  experience: {\n    marginTop: \"20vh\",\n    width: \"100%\"\n  },\n  card: {\n    marginTop: \"5vh\",\n    paddingTop: \"10vh\",\n    paddingBottom: \"10vh\",\n    background: \"#21242B\"\n  },\n  center: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: \"2vh\"\n  },\n  title: {\n    paddingBottom: \"5vh\"\n  }\n})\n\nfunction Experience() {\n  const classes = useStyles();\n  const [openAWS, setOpenAWS] = useState(false);\n  const [openSAP, setOpenSAP] = useState(false);\n  const [openVCL, setOpenVCL] = useState(false);\n\n  const handleClickOpenAWS = () => {\n    setOpenAWS(true);\n  };\n\n  const handleCloseAWS = () => {\n    setOpenAWS(false);\n  };\n\n  const handleClickOpenSAP = () => {\n    setOpenSAP(true);\n  };\n\n  const handleCloseSAP = () => {\n    setOpenSAP(false);\n  };\n\n  const handleClickOpenVCL = () => {\n    setOpenVCL(true);\n  };\n\n  const handleCloseVCL = () => {\n    setOpenVCL(false);\n  };\n\n  return (\n    <Container className={classes.experience}>\n      <Typography variant=\"h3\" className={classes.title}>Experience</Typography>\n      <Grid container className={classes.card}>\n        <Grid item sm={6} xs={12} className={classes.center}>\n          <Avatar alt=\"awd\" src={`${process.env.PUBLIC_URL}/aws.jpg`} sx={{width: \"40vh\", height: \"auto\", maxWidth: \"100%\"}}/>\n        </Grid>\n        <Grid item sm={6} xs={12} className={classes.center}>\n          <Box>\n            <Typography variant=\"h4\">Software Developer Intern</Typography>\n            <Typography variant=\"h6\">RDS Proxy</Typography>\n            <Typography variant=\"body1\">May - Aug 2021 (4 month)</Typography>\n            <br/>\n            <Button onClick={handleClickOpenAWS}>Learn more {'>'}</Button>\n            <AWSDialog\n              open={openAWS}\n              onClose={handleCloseAWS}\n            />\n          </Box>\n        </Grid>\n      </Grid>\n      <Grid container className={classes.card}>\n        <Grid item sm={6} xs={12} className={classes.center}>\n          <Box>\n            <Typography variant=\"h4\">Software Developer Intern</Typography>\n            <Typography variant=\"h6\">Infrastructure</Typography>\n            <Typography variant=\"body1\">Jan - Aug 2020 (8 month)</Typography>\n            <Typography variant=\"body1\">Jan - Apr 2021 (4 month)</Typography>\n            <br/>\n            <Button onClick={handleClickOpenSAP}>Learn more {'>'}</Button>\n            <SAPDialog\n              open={openSAP}\n              onClose={handleCloseSAP}\n            />\n          </Box>\n        </Grid>\n        <Grid item sm={6} xs={12} className={classes.center}>\n          <Avatar alt=\"SAP\" src={`${process.env.PUBLIC_URL}/SAP.jpg`} sx={{width: \"40vh\", height: \"auto\", maxWidth: \"100%\"}}/>\n        </Grid>\n      </Grid>\n      <Grid container className={classes.card}>\n        <Grid item sm={6} xs={12} className={classes.center}>\n          <Avatar alt=\"VCL\" src={`${process.env.PUBLIC_URL}/VCL.jpg`} sx={{width: \"40vh\", height: \"auto\", maxWidth: \"100%\"}}/>\n        </Grid>\n        <Grid item sm={6} xs={12} className={classes.center}>\n          <Box>\n          <Typography variant=\"h4\">Lead Software Developer</Typography>\n            <Typography variant=\"h6\">UBC Visual Cognition Lab</Typography>\n            <Typography variant=\"body1\">Apr 2019 - Present (2 year 10 month+)</Typography>\n            <br/>\n            <Button onClick={handleClickOpenVCL}>Learn more {'>'}</Button>\n            <VCLDialog\n              open={openVCL}\n              onClose={handleCloseVCL}\n            />\n          </Box>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n}\n\nfunction AWSDialog(props: any) {\n  const { onClose, open } = props;\n\n  const handleClose = () => {\n    onClose();\n  };\n\n  return (\n    <Dialog onClose={handleClose} open={open}>\n      <DialogTitle>Migrating CloudWatch Logs to Redshift Database</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          <List>\n            <ListItem>\n              <ListItemText>CloudWatch is used by developers in the team to visualize data and gain insights on logs and metrics. However, CloudWatch loses its resolution over time and has limited analysis capability. My project was to migrate CloudWatch metrics to more reliable storage such as the Redshift database by using automatic deployment.</ListItemText>\n            </ListItem>\n            <ListItem>\n              <ListItemText>Key Technologies: AWS services (CloudWatch, Redshift, S3, Lambda Function, IAM, Firehose, CloudFormation, CDK, Subscription Filter), Java</ListItemText>\n            </ListItem>\n          </List>\n        </DialogContentText>\n      </DialogContent>\n      <DialogTitle>Adding CloudWatch Metric</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          <List>\n            <ListItem>\n              <ListItemText>Added average client connections field in CloudWatch Logs that represents the duration of connections for 1 minutes intervals using Java.</ListItemText>\n            </ListItem>\n          </List >\n        </DialogContentText>\n      </DialogContent>\n      <DialogContent>\n        <DialogContentText>\n          Although both projects still require more development, I successfully completed the assigned project and contributed to improving the internal tools used by the developers in the team.\n        </DialogContentText>\n      </DialogContent>\n    </Dialog>\n  );\n}\n\nfunction SAPDialog(props: any) {\n  const { onClose, open } = props;\n\n  const handleClose = () => {\n    onClose();\n  };\n\n  return (\n    <Dialog onClose={handleClose} open={open}>\n      <DialogTitle>Jan - Aug 2020</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          <List>\n            <ListItem>\n              <ListItemText>Implemented Oauth2.0 client credential flow between Kubernetes and Cloud foundry with WebSocket tunneling connection over SSH using Go.</ListItemText>\n            </ListItem>\n            <ListItem>\n              <ListItemText>Developed Concourse pipeline that installs highly available and load balanced Docker Registry in Kubernetes, which keeps only latest 10 tags of a repository in the Docker Registry.</ListItemText>\n            </ListItem>\n            <ListItem>\n              <ListItemText>Implemented Python script that locates GitHub repositories recursively to find Java files that depends on certain microservices using GitHub’s APIs.</ListItemText>\n            </ListItem>\n            <ListItem>\n              <ListItemText>Wrote Go script to create and modifying IP addressed of service key in cloud foundry using APIs.</ListItemText>\n            </ListItem>\n            <ListItem>\n              <ListItemText>Key Technologies: Docker, Kubernetes, Cloud Foundry, Concourse, Go, Python</ListItemText>\n            </ListItem>\n          </List>\n        </DialogContentText>\n      </DialogContent>\n      <DialogTitle>Jan - Apr 2021</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          <List>\n            <ListItem>\n              <ListItemText>Designed and implemented landing page for the documention of the project.</ListItemText>\n            </ListItem>\n            <ListItem>\n              <ListItemText>Implemented PostgreSQL tester application that tests the functionality of service broker deployed in Kubernetes.</ListItemText>\n            </ListItem>\n            <ListItem>\n              <ListItemText>Developed documentation for setting up CI pipeline to onboard new services to Delphi project using Jenkins as a Service and created interactive flowchart for the required steps.</ListItemText>\n            </ListItem>\n            <ListItem>\n              <ListItemText>Key Technologies: Docker, Kubernetes, Cloud Foundry, Jenkins as a Service, Node.js, Git, mkdocs</ListItemText>\n            </ListItem>\n          </List >\n        </DialogContentText>\n      </DialogContent>\n    </Dialog>\n  );\n}\n\nfunction VCLDialog(props: any) {\n  const { onClose, open } = props;\n\n  const handleClose = () => {\n    onClose();\n  };\n\n  return (\n    <Dialog onClose={handleClose} open={open}>\n      <DialogTitle>Leadership</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          <List>\n            <ListItem>\n              <ListItemText>Responsible for managing the coding team (~ 10 developers) and leading projects.</ListItemText>\n            </ListItem>\n            <ListItem>\n              <ListItemText>Designed on-boarding documentation for newcomers to follow.</ListItemText>\n            </ListItem>\n            <ListItem>\n              <ListItemText>Attended weekly meetings and assign tasks to developers based on the needs of the researchers.</ListItemText>\n            </ListItem>\n            <ListItem>\n              <ListItemText>Conducted interviews to select developers.</ListItemText>\n            </ListItem>\n          </List>\n        </DialogContentText>\n      </DialogContent>\n      <DialogTitle>Technical</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          <List>\n            <ListItem>\n              <ListItemText>Designed and deployed local experiment web application online using Heroku, Firebase, Prolific, JavaScript, and Node.js as a response to the physical restriction policies during the COVID-19 pandemic.</ListItemText>\n            </ListItem>\n            <ListItem>\n              <ListItemText>Developed a feature that allows resolution to be scaled so that graphs are presented in fixed physical length across all experiments and monitors. Implemented frontend for laptop model selection and card scaling feature used to retrieve pixel per inch of the user’s monitor.</ListItemText>\n            </ListItem>\n            <ListItem>\n              <ListItemText>Refactored the existing experiment web application by applying Encapsulation and Abstraction OOP principles.</ListItemText>\n            </ListItem>\n            <ListItem>\n              <ListItemText>Assisted researchers and developers debug and enhance their research experiment.</ListItemText>\n            </ListItem>\n            <ListItem>\n              <ListItemText>Created documentation explaining the architecture and design of the experiment web application.</ListItemText>\n            </ListItem>\n            <ListItem>\n              <ListItemText>Implemented new experiments.</ListItemText>\n            </ListItem>\n            <ListItem>\n              <ListItemText>Key technologies: JavaScript, Node.js, API, D3, JsPsych, Heroku, Firebase, Prolific, bootstrap, HTML, CSS, Git</ListItemText>\n            </ListItem>\n          </List >\n        </DialogContentText>\n      </DialogContent>\n    </Dialog>\n  );\n}\n\nexport default Experience;","import {Avatar, Typography, Grid, IconButton, Box} from '@mui/material';\nimport { makeStyles } from '@mui/styles';\nimport GitHubIcon from '@mui/icons-material/GitHub';\nimport LinkedInIcon from '@mui/icons-material/LinkedIn';\n\nconst useStyles = makeStyles({\n  title: {\n    paddingTop: \"8vh\",\n    paddingBottom: \"8vh\",\n    background: \"#21242B\"\n  },\n  center: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: \"5vh\"\n  }\n})\n\n\nfunction Title() {\n  const classes = useStyles();\n\n  return (\n    <Grid container className={classes.title}>\n      <Grid item sm={6} xs={12} className={classes.center}>\n        <Box>\n          <Typography variant=\"h1\">Jake Moh</Typography>\n          <Typography variant=\"h4\">Software Developer</Typography>\n          <IconButton onClick={() => window.open(\"https://github.com/JakeMoh\")}>\n            <GitHubIcon sx={{ fontSize: 50 }}/>\n          </IconButton>\n          <IconButton onClick={() => window.open(\"https://www.linkedin.com/in/jake-moh-1a48a2193/\")}>\n            <LinkedInIcon sx={{ fontSize: 50 }}/>\n          </IconButton>\n        </Box>\n      </Grid>\n      <Grid item sm={6} xs={12} className={classes.center}>\n        <Avatar alt=\"Jake Moh Profile\" src={`${process.env.PUBLIC_URL}/profile.jpg`} sx={{width: \"80vh\", height: \"auto\", maxWidth: \"100%\"}}/>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default Title;","import { makeStyles } from '@mui/styles';\nimport { useState } from 'react';\nimport { Typography, Button, Container, Grid, Card, CardMedia, CardContent, CardActions, Link, Dialog, DialogTitle, DialogContent, DialogContentText, List, ListItem, ListItemText} from '@mui/material';\n\n\nconst useStyles = makeStyles({\n  project: {\n    marginTop: \"20vh\"\n  },\n  title: {\n    paddingBottom: \"10vh\"\n  },\n  button: {\n    justifyContent: 'center'\n  }\n})\n\nfunction Project() {\n  const classes = useStyles();\n  const [openConnectFive, setOpenConnectFive] = useState(false);\n\n  const handleClickOpenConnectFive = () => {\n    setOpenConnectFive(true);\n  };\n\n  const handleCloseConnectFive = () => {\n    setOpenConnectFive(false);\n  };\n\n  return (\n    <Container className={classes.project}>\n      <Typography variant=\"h3\" className={classes.title}>Project</Typography>\n      <Grid container spacing={5}>\n        <Grid item xs={12} sm={6}>\n          <Card>\n            <CardMedia\n              component=\"img\"\n              height=\"300\"\n              image=\"/game/connectFive.jpg\"\n              alt=\"sample\"\n            />\n            <CardContent>\n              <Typography gutterBottom variant=\"h4\">\n                Connect Five\n              </Typography>\n              <Typography variant=\"body2\">\n                Two player game: Connect five dots to win the game.\n              </Typography>\n              <Button onClick={handleClickOpenConnectFive}>Learn more {'>'}</Button>\n              <ConnectFiveDialog\n                open={openConnectFive}\n                onClose={handleCloseConnectFive}\n              />\n            </CardContent>\n            <CardActions className={classes.button}>\n              <Button href=\"/#/connectfive\" variant=\"contained\">\n                Play\n              </Button>\n            </CardActions>\n          </Card>\n        </Grid>\n\n        <Grid item xs={12} sm={6}>\n          <Card>\n            <CardContent>\n              <Typography gutterBottom variant=\"h4\">\n                Game 2\n              </Typography>\n              <Typography variant=\"body2\">\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque egestas auctor finibus.\n              </Typography>\n              <Link underline=\"hover\" variant=\"body1\">Learn more {'>'}</Link>\n            </CardContent>\n            <CardActions className={classes.button}>\n              <Button href=\"/#/game\" variant=\"contained\">\n                Play\n              </Button>\n            </CardActions>\n            <CardMedia\n              component=\"img\"\n              height=\"300\"\n              image=\"/game/game2.jpg\"\n              alt=\"sample\"\n            />\n          </Card>\n        </Grid>\n\n        <Grid item xs={12} sm={6}>\n          <Card>\n            <CardMedia\n              component=\"img\"\n              height=\"300\"\n              image=\"/game/game3.jpg\"\n              alt=\"sample\"\n            />\n            <CardContent>\n              <Typography gutterBottom variant=\"h4\">\n                Game 3\n              </Typography>\n              <Typography variant=\"body2\">\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque egestas auctor finibus.\n              </Typography>\n              <Link underline=\"hover\" variant=\"body1\">Learn more {'>'}</Link>\n            </CardContent>\n            <CardActions className={classes.button}>\n              <Button href=\"/#/game\" variant=\"contained\">\n                Play\n              </Button>\n            </CardActions>\n          </Card>\n        </Grid>\n\n        <Grid item xs={12} sm={6}>\n          <Card>\n            <CardMedia\n              component=\"img\"\n              height=\"300\"\n              image=\"/game/game4.jpg\"\n              alt=\"sample\"\n            />\n            <CardContent>\n              <Typography gutterBottom variant=\"h4\">\n                Game 4\n              </Typography>\n              <Typography variant=\"body2\">\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque egestas auctor finibus.\n              </Typography>\n              <Link underline=\"hover\" variant=\"body1\">Learn more {'>'}</Link>\n            </CardContent>\n            <CardActions className={classes.button}>\n              <Button href=\"/#/game\" variant=\"contained\">\n                Play\n              </Button>\n            </CardActions>\n          </Card>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n}\n\nfunction ConnectFiveDialog(props: any) {\n  const { onClose, open } = props;\n\n  const handleClose = () => {\n    onClose();\n  };\n\n  return (\n    <Dialog onClose={handleClose} open={open}>\n      <DialogTitle>Connect Five</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          <List>\n            <ListItem>\n              <ListItemText>Inspired by Tic-tac-toe of React tutorial.</ListItemText>\n            </ListItem>\n            <ListItem>\n              <ListItemText>Used material design to generate boxes and buttons.</ListItemText>\n            </ListItem>\n            <ListItem>\n              <ListItemText>Korean two player game.</ListItemText>\n            </ListItem>\n          </List>\n        </DialogContentText>\n      </DialogContent>\n    </Dialog>\n  );\n}\n\nexport default Project;","import { makeStyles } from '@mui/styles';\nimport { useState } from 'react';\nimport { Typography, Avatar, Container, Grid, Link, Box, Button, Dialog, DialogTitle, DialogContent, DialogContentText, List, ListItem, ListItemText } from '@mui/material';\n\nconst useStyles = makeStyles({\n  education: {\n    marginTop: \"20vh\",\n    marginBottom: \"20vh\"\n  },\n  card: {\n    marginTop: \"5vh\",\n    paddingTop: \"10vh\",\n    paddingBottom: \"10vh\",\n    background: \"#21242B\"\n  },\n  center: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: \"5vh\"\n  },\n  title: {\n    paddingBottom: \"5vh\"\n  }\n})\n\nfunction Education() {\n  const classes = useStyles();\n  const [openUBC, setOpenUBC] = useState(false);\n\n  const handleClickOpenUBC = () => {\n    setOpenUBC(true);\n  };\n\n  const handleCloseUBC = () => {\n    setOpenUBC(false);\n  };\n\n  return (\n    <Container className={classes.education}>\n      <Typography variant=\"h3\" className={classes.title}>Education</Typography>\n      <Grid container className={classes.card}>\n        <Grid item sm={6} xs={12} className={classes.center}>\n          <Avatar alt=\"UBC\" src={`${process.env.PUBLIC_URL}/UBC.jpg`} sx={{width: \"40vh\", height: \"auto\", maxWidth: \"100%\"}}/>\n        </Grid>\n        <Grid item sm={6} xs={12} className={classes.center}>\n          <Box>\n            <Typography variant=\"h4\">University of British Columbia</Typography>\n            <Typography variant=\"h6\">BSc Computer Science (2018 - 2022)</Typography>\n            <br/>\n            <Button onClick={handleClickOpenUBC}>Learn more {'>'}</Button>\n            <UBCDialog\n              open={openUBC}\n              onClose={handleCloseUBC}\n            />\n          </Box>\n        </Grid>\n      </Grid>\n      <Grid container className={classes.card}>\n        <Grid item sm={6} xs={12} className={classes.center}>\n          <Box>\n            <Typography variant=\"h4\">University of Toronto</Typography>\n            <Typography variant=\"h6\">BSc Animal Physiology & Human Biology (2012 - 2017)</Typography>\n          </Box>\n        </Grid>\n        <Grid item sm={6} xs={12} className={classes.center}>\n          <Avatar alt=\"UofT\" src={`${process.env.PUBLIC_URL}/UofT.jpg`} sx={{width: \"40vh\", height: \"auto\", maxWidth: \"100%\"}}/>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n}\n\nfunction UBCDialog(props: any) {\n  const { onClose, open } = props;\n\n  const handleClose = () => {\n    onClose();\n  };\n\n  return (\n    <Dialog onClose={handleClose} open={open}>\n      <DialogTitle>UBC</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          <List>\n            <ListItem>\n              <ListItemText>Computer science courses average: 3.84 / 4</ListItemText>\n            </ListItem>\n            <ListItem>\n              <ListItemText>Courses: Software Construction, Algorithms and Data Structures, Introduction to Computer Systems, Computer Hardware and Operating Systems, Introduction to Relational Databases, Internet Computing, Machine Learning and Data Mining, Advanced Software Engineering, Numerical Approximation and Discretization</ListItemText>\n            </ListItem>\n          </List>\n        </DialogContentText>\n      </DialogContent>\n    </Dialog>\n  );\n}\n\nexport default Education;","import {Typography, Container} from '@mui/material';\n\nfunction Game() {\n  return (\n    <Container>\n      <Typography variant=\"h1\">Game Page</Typography>\n    </Container>\n  );\n}\n\nexport default Game;","import { useState } from 'react';\nimport {Button, Typography} from '@mui/material';\nimport './alignFive.css';\n\nconst BOARD_SIZE: number = 16;\n\nfunction getSquareIndex(row: number, col: number): number {\n  \n  return row * BOARD_SIZE + col;\n}\n\nfunction getSquareValue(squares: Array<String>, row: number, col: number): String | null {\n  if (row < 0 || row > BOARD_SIZE || col < 0 || col > BOARD_SIZE) {\n    return null;\n  }\n  return squares[getSquareIndex(row, col)];\n}\n\nfunction Square(props: any) {\n  return (\n    <Button\n      variant=\"outlined\"\n      style={{ width: 30, height: 30, minWidth: 30, minHeight: 30 }}\n      onClick={() => props.onClick()}\n    >\n      {props.value}\n    </Button>\n  )\n}\n\nfunction Board(props: any) {\n  const renderSquare = (row: number, col: number) => {\n    return (\n      <Square\n        key={row + \",\" + col}\n        onClick={() =>  props.onClick(row, col)}\n        value={props.squares[getSquareIndex(row, col)]}\n      />\n    )\n  }\n\n  let board = [];\n  for (let row = 0; row < BOARD_SIZE; row++) {\n    let squares = [];\n    for (let col = 0; col < BOARD_SIZE; col++) {\n      squares.push(renderSquare(row, col));\n    }\n    board.push(<div className=\"board-row\" key={row}>{squares}</div>)\n  }\n \n  return (\n    <div>{board}</div>\n  )\n}\n\nfunction ConnectFive() {\n  const [squares, setSquares] = useState(Array(16*16).fill(null));\n  const [isXTurn, setIsXTurn] = useState(true);\n\n  const calculateWinner = (squares: Array<String>): String | null => {\n    for (let row = 0; row < BOARD_SIZE; row++) {\n      for (let col = 0; col <BOARD_SIZE; col++) {\n        const squareValue = getSquareValue(squares, row, col);\n        if (squareValue && \n          squareValue === getSquareValue(squares, row, col + 1) && \n          squareValue === getSquareValue(squares, row, col + 2) &&\n          squareValue === getSquareValue(squares, row, col + 3) &&\n          squareValue === getSquareValue(squares, row, col + 4)) {\n          return squareValue;\n        }\n        if (squareValue && \n          squareValue === getSquareValue(squares, row + 1, col) && \n          squareValue === getSquareValue(squares, row + 2, col) &&\n          squareValue === getSquareValue(squares, row + 3, col) &&\n          squareValue === getSquareValue(squares, row + 4, col)) {\n          return squareValue;\n        }\n        if (squareValue && \n          squareValue === getSquareValue(squares, row + 1, col + 1) && \n          squareValue === getSquareValue(squares, row + 2, col + 2) &&\n          squareValue === getSquareValue(squares, row + 3, col + 3) &&\n          squareValue === getSquareValue(squares, row + 4, col + 4)) {\n          return squareValue;\n        }\n        if (squareValue && \n          squareValue === getSquareValue(squares, row + 1, col - 1) && \n          squareValue === getSquareValue(squares, row + 2, col - 2) &&\n          squareValue === getSquareValue(squares, row + 3, col - 3) &&\n          squareValue === getSquareValue(squares, row + 4, col - 4)) {\n          return squareValue;\n        }\n      }\n    }\n    return null;\n  }\n\n  const winner: String | null = calculateWinner(squares);\n\n  const handleClick = (row: number, col: number) => {\n    if (winner || squares[getSquareIndex(row, col)]) {\n      return;\n    }\n    const squares_: Array<String> = squares.slice();\n    console.log(\"Button click: row: \" + row + \", col: \" + col);\n    squares_[getSquareIndex(row, col)] = isXTurn? \"X\" : \"O\";\n    setIsXTurn(!isXTurn);\n    setSquares(squares_);\n  }\n\n  const reset = () => {\n    setSquares(Array(16*16).fill(null));\n    setIsXTurn(true);\n  }\n\n  let status;\n  if (winner) {\n    status = \"Winner: \" + winner;\n  } else {\n    status = \"Next Player: \" + (isXTurn? \"X\": \"O\");\n  }\n\n  return (\n    <div className=\"align-five\">\n      <Board\n        onClick = {(row: number, col: number) => handleClick(row, col)}\n        squares={squares}\n      />\n      <div className=\"game-info\">\n        <Typography align=\"left\">{status}</Typography>\n        <Button onClick={reset} variant=\"outlined\">Restart</Button>\n      </div>\n    </div>\n  );\n}\n\nexport default ConnectFive;","import {Typography, Container, Grid} from '@mui/material';\n// import { Link } from 'react-router-dom';\nimport { makeStyles } from '@mui/styles';\n\nconst useStyles = makeStyles({\n  footer: {\n    color: \"grey\"\n  }\n})\n\nfunction Footer() {\n  const classes = useStyles();\n\n  return (\n    <Container className={classes.footer}>\n      <Grid container>\n        <Grid item xs={6} sm={5} md={4}>\n          <Typography variant=\"body2\" align=\"left\">Copyright © 2021 JakeMoh.com</Typography>\n        </Grid>\n        <Grid item xs={6} sm={5} md={4}>\n          <Typography variant=\"body2\" align=\"left\">jakem5531@gmail.com</Typography>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n}\n\nexport default Footer;","import './App.css';\nimport Experience from './components/Experience';\nimport Title from './components/Title';\nimport Project from './components/Project';\nimport Education from './components/Education';\nimport Game from './games/Game';\nimport ConnectFive from './games/AlignFive/ConnectFive';\nimport Footer from './components/Footer';\n\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport { CssBaseline, ThemeProvider, createTheme } from '@mui/material';\n\nconst darkTheme = createTheme({\n  palette: {\n    mode: 'dark',\n    primary: {\n      main: \"#06c\"\n    },\n    background: {\n      default: \"#21242B\",\n      paper: \"#21242B\"\n    },\n  },\n  components: {\n    // Name of the component\n    MuiCard: {\n      styleOverrides: {\n        // Name of the slot\n        root: {\n          // Some CSS\n          backgroundImage: 'none',\n        },\n      },\n    },\n    MuiPaper: {\n      styleOverrides: {\n        root: {\n          backgroundImage: 'none',\n        },\n      },\n    },\n  },\n});\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <CssBaseline />\n        <ThemeProvider theme={darkTheme}>\n          <HashRouter>\n            <Switch>\n              <Route exact path=\"/\">\n                <Title/>\n                <Experience/>\n                <Project/>\n                <Education/>\n                <Footer/>\n              </Route>\n              <Route path=\"/game\">\n                <Game/>\n              </Route>\n              <Route path=\"/connectfive\">\n                <ConnectFive/>\n              </Route>\n            </Switch>\n          </HashRouter>\n        </ThemeProvider>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}